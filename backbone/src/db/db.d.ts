/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type AccessVerificationType = "delete-user" | "sign-in" | "sign-up" | "update-email" | "update-phone";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Json = JsonValue;

export type JsonArray = JsonValue[];

export type JsonObject = {
  [x: string]: JsonValue | undefined;
};

export type JsonPrimitive = boolean | number | string | null;

export type JsonValue = JsonArray | JsonObject | JsonPrimitive;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface AccessVerifications {
  accessVerificationId: Generated<string>;
  attempts: Generated<number>;
  code: string;
  createdAt: Generated<Timestamp>;
  emailOrPhone: string;
  expiresAt: Timestamp;
  resendableAt: Timestamp;
  token: string | null;
  type: AccessVerificationType;
  updatedAt: Generated<Timestamp>;
}

export interface UserPreferences {
  createdAt: Generated<Timestamp>;
  name: string;
  updatedAt: Generated<Timestamp>;
  userId: string;
  userPreferenceId: Generated<string>;
  value: Json;
}

export interface Users {
  bannedAt: Timestamp | null;
  createdAt: Generated<Timestamp>;
  email: string | null;
  googleUserId: string | null;
  localTZOffset: Generated<number>;
  name: string;
  phone: string | null;
  updatedAt: Generated<Timestamp>;
  userId: Generated<string>;
}

export interface UserSessions {
  createdAt: Generated<Timestamp>;
  deviceId: Generated<string>;
  expiresAt: Timestamp;
  ipAddress: string | null;
  updatedAt: Generated<Timestamp>;
  userId: string;
  userSessionId: Generated<string>;
}

export interface DB {
  accessVerifications: AccessVerifications;
  userPreferences: UserPreferences;
  users: Users;
  userSessions: UserSessions;
}
